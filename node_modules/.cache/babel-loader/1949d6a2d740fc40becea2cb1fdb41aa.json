{"ast":null,"code":"var _jsxFileName = \"/Users/paulndam/Documents/CODINGDOJO/MERN/React/BlueChat_II/bluechat_ii/src/components/Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./Chat.css\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\"; //creating a temp variable for our socket\n\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setname] = useState(\"\");\n  const [room, setroom] = useState(\"\");\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    //retrieving data from user while they join the chat, we do that by using the querystring and the parse it\n    // location is from react router\n    const {\n      name,\n      room\n    } = queryString.parse(location.search); // when we get our first connection we are going to set our socket to a connection\n\n    socket = io(ENDPOINT);\n    setroom(room);\n    setname(name);\n    socket.emit(\"come on\", {\n      nam,\n      room\n    });\n    console.log(location.search);\n    console.log(socket);\n  }, [ENDPOINT, location.search]);\n  return /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }, \"Chat Thru Bluechat\");\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/paulndam/Documents/CODINGDOJO/MERN/React/BlueChat_II/bluechat_ii/src/components/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setname","room","setroom","ENDPOINT","parse","search","emit","nam","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CAEA;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMW,QAAQ,GAAG,gBAAjB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACU,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CAAvB,CAHc,CAKd;;AACAT,IAAAA,MAAM,GAAGD,EAAE,CAACQ,QAAD,CAAX;AAEAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAH,IAAAA,MAAM,CAACU,IAAP,CAAY,SAAZ,EAAuB;AAAEC,MAAAA,GAAF;AAAON,MAAAA;AAAP,KAAvB;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAQ,CAACO,MAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYb,MAAZ;AACD,GAfQ,EAeN,CAACO,QAAD,EAAWL,QAAQ,CAACO,MAApB,CAfM,CAAT;AAgBA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD,CAtBD;;AAuBA,eAAeR,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Chat.css\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\n\n//creating a temp variable for our socket\n\nlet socket;\n\nconst Chat = ({ location }) => {\n  const [name, setname] = useState(\"\");\n  const [room, setroom] = useState(\"\");\n  const ENDPOINT = \"localhost:5000\";\n\n  useEffect(() => {\n    //retrieving data from user while they join the chat, we do that by using the querystring and the parse it\n    // location is from react router\n    const { name, room } = queryString.parse(location.search);\n\n    // when we get our first connection we are going to set our socket to a connection\n    socket = io(ENDPOINT);\n\n    setroom(room);\n    setname(name);\n\n    socket.emit(\"come on\", { nam, room });\n\n    console.log(location.search);\n    console.log(socket);\n  }, [ENDPOINT, location.search]);\n  return <h3>Chat Thru Bluechat</h3>;\n};\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}